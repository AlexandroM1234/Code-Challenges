"""
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Example 3:
Input: s = "a", t = "aa"
Output: "a"

Example 4:
Input: s = "ae", t = "aea"
Output: "a"
 
Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lower-case English letters.
"""


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # if the lenght of s is 0 then t has to be something else added to it so just return t
        if len(s) == 0:
            return t

        # set up a hashtable for both of the strings where the keys are the letters and the value is the amount of times they show up in the string
        count1 = {}
        count2 = {}
        for char in s:
            if char not in count1:
                count1[char] = 1
            else:
                count1[char] += 1
        for st in t:
            if st not in count2:
                count2[st] = 1
            else:
                count2[st] += 1
        # Once the hashtables are filled if one of the keys is not in the other that is the letter that was added
        # or if one of the letters show up more than the other that is the letter that was added
        for i in count2:
            if i not in count1 or count2[i] != count1[i]:
                return i
